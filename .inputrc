# To the extent possible under law, the author(s) have dedicated all 
# copyright and related and neighboring rights to this software to the 
# public domain worldwide. This software is distributed without any warranty. 
# You should have received a copy of the CC0 Public Domain Dedication along 
# with this software. 
# If not, see <http://creativecommons.org/publicdomain/zero/1.0/>. 

# ~/.inputrc: readline initialization file.

# The copy in your home directory (~/.inputrc) is yours, please
# feel free to customise it to create a shell
# environment to your liking.  If you feel a change
# would be benifitial to all, please feel free to send
# a patch to the msys2 mailing list.

# the following line is actually
# equivalent to "\C-?": delete-char
# "\e[3~": delete-char

# VT
# "\e[1~": beginning-of-line
# "\e[4~": end-of-line

# kvt
# "\e[H": beginning-of-line
# "\e[F": end-of-line

# rxvt and konsole (i.e. the KDE-app...)
# "\e[7~": beginning-of-line
# "\e[8~": end-of-line

# VT220
# "\eOH": beginning-of-line
# "\eOF": end-of-line

# Allow 8-bit input/output
set meta-flag on
set input-meta on
set output-meta on
set convert-meta off

$if Bash
  # Don't ring bell on completion
  set bell-style none

  # Show all instead of beeping first
  set show-all-if-ambiguous on

  set revert-all-at-newline off

  # Filename completion/expansion
  set completion-ignore-case on
  set completion-map-case on
  set completion-display-width -1
  set completion-prefix-display-length 0
  set completion-query-items 30

  # Expand homedir name
  set expand-tilde off

  # Append "/" to all dirnames
  set mark-directories on
  set mark-symlinked-directories on

  # visible-stats
  # Append a mark according to the file type in a listing
  set visible-stats on
  set colored-stats on
  set colored-completion-prefix on
  set skip-completed-text on
  set blink-matching-paren on

  # mode setting
  set show-mode-in-prompt on
  set vi-cmd-mode-string "\e[34;1m[N]\e[0m "
  set vi-ins-mode-string "\e[38;5;40;7m I \e[0m "
  set emacs-mode-string  "\1\e[34m\2 e \1\e[0m\2"

  set enable-bracketed-paste off
  set history-preserve-point on
  set horizontal-scroll-mode off
  set print-completions-horizontally on

  # よくわからん
  set menu-complete-display-prefix on
  set show-all-if-unmodified on

  # Match all files
  #set match-hidden-files on

  # 'Magic Space'
  # Insert a space character then performs
  # a history expansion in the line
  #Space: magic-space
$endif

# MSYSTEM is emacs based
#
# @see https://www.gnu.org/software/bash/manual/html_node/Readline-Init-File.html
$if mode=emacs
    "\es": menu-complete


    # My key maps
    # Start with "C-Space"

    # Redirections frequently used

    "\C- rp": " | "
    "\C- rl": " | less"
    "\C- rv": " | vim -"
    "\C- rV": " | view -"
    "\C- rg": " | grep "
    "\C- rx": " | xargs "
    "\C- rc": " | cp2clip"
    "\C- ru": " | j2u "
    "\C- rj": " | u2j "
    "\C- rn": " > /dev/null"
    "\C- rN": " > /dev/null 2>&1"

    # Complete and execute

    "\C- o:":  ": "
    "\C- os":  "sudo "
    "\C- om":  "man "
    "\C- ov":  "vim "
    "\C- o ":  " "

    # Other key maps

    "\C- pp": " $(pwd) "
    "\C- f":  "for i in $() ; do echo $i ; done\e)"
    "\C-^":    "~/winhome"

    # Function key

    "\eOP":   " f-h"                     # F1
    "\eOQ":   " f-hist"                  # F2
    "\eOR":   " f-s"                     # F3
    "\e[15~": " source ~/.bash_profile"  # F5
    "\e[17~": " sshinit"                 # F6
    "\e[18~": " exec $SHELL -l"          # F7
    "\e[24~": " here"                    # F12

    # Complete quotation marks

    "\C- qs": "\'\'\C-b"
    "\C- qd": "\"\"\C-b"
    "\C- qp": "()\C-b"
    "\C- q3": "$()\C-b"

    # Surround current or previous word with quotation marks

    "\C- ss": "\eb\'\ef\'"
    "\C- sd": "\eb\"\ef\""
    "\C- s3": "\eb$(\ef)"
    "\C- s$": "\C-a$(\C-e)\C-a"

    # Complete SQL

    "\C- Sl": " name like '%%' \e3\C-b"
    "\C- So": " order by "
    "\C- Ss": " select * from "
    "\C- Sj": " inner join  on \eb\C-b"

    # Commands with fuzzy finder

    "\C- fh":  " f-h"
    "\C- fc":  " f-cd"
    "\C- fgc": " f-gc"
    "\C- fvf": " f-vf"
    "\C- fvg": " f-vgl"
    "\C- fvl": " f-vl"

    # Common to Console & RXVT
    "\C-?":  backward-kill-line        # Ctrl-BackSpace
    "\e[2~": paste-from-clipboard      # "Ins. Key"
    "\e[5~": beginning-of-histpory     # Page up
    "\e[6~": end-of-history            # Page down

    # $if term=msys # RXVT
    #   "\e[7~": beginning-of-line      # Home Key
    #   "\e[8~": end-of-line            # End Key
    #   "\e[11~": display-shell-version # F1
    #   "\e[15~": re-read-init-file     # F5
    #   "\e[12~": "Function Key 2"
    #   "\e[13~": "Function Key 3"
    #   "\e[14~": "Function Key 4"
    #   "\e[17~": "Function Key 6"
    #   "\e[18~": "Function Key 7"
    #   "\e[19~": "Function Key 8"
    #   "\e[20~": "Function Key 9"
    #   "\e[21~": "Function Key 10"
    # $else
    # Eh, normal Console is not really cygwin anymore, is it? Using 'else' instead. -mstormo
    # $if term=cygwin # Console
    #   "\e[1~": beginning-of-line      # Home Key
    #   "\e[4~": end-of-line            # End Key
    #   "\e[3~": delete-char      # Delete Key
    #   "\e\e[C": forward-word      # Alt-Right
    #   "\e\e[D": backward-word      # Alt-Left
    #   "\e[1;5C": forward-word   # ctrl + right
    #   "\e[1;5D": backward-word  # ctrl + left 
    #   "\e[17~": "Function Key 6"
    #   "\e[18~": "Function Key 7"
    #   "\e[19~": "Function Key 8"
    #   "\e[20~": "Function Key 9"
    #   "\e[21~": "Function Key 10"
    #   "\e[23~": "Function Key 11"
    # $endif
$endif
